name: charmed-mysql # you probably want to 'snapcraft register <name>'
base: core22 # the base snap is the execution environment for this snap
version: '8.0.35' # just for humans, typically '1.2+git' or '1.3.2'
summary: MySQL server in a snap. # 79 char long summary
description: |
  The MySQL software delivers a very fast, multithreaded, multi-user,
  and robust SQL (Structured Query Language) database server. MySQL
  Server is intended for mission-critical, heavy-load production
  systems as well as for embedding into mass-deployed software.

grade: stable # must be 'stable' to release into candidate/stable channels
confinement: strict # use 'strict' once you have the right plugs and slots
license: Apache-2.0

system-usernames:
  snap_daemon: shared

package-repositories:
  - type: apt
    components:
      - main
    suites:
      - jammy
    key-id: F6ECB3762474EDA9D21B7022871920D1991BC93C
    url: http://security.ubuntu.com/ubuntu/
  - type: apt
    ppa: data-platform/mysql-shell
  - type: apt
    ppa: data-platform/xtrabackup
  - type: apt
    ppa: data-platform/mysqld-exporter
  - type: apt
    ppa: data-platform/mysqlrouter-exporter

layout:
  /var/lib/mysql-files:
    bind: $SNAP_COMMON/var/lib/mysql-files
  /usr/lib/mysqlrouter:
    symlink: $SNAP/usr/lib/mysqlrouter
  /usr/lib/mysql-router:
    symlink: $SNAP/usr/lib/mysql-router
  /etc/mysqlrouter:
    symlink: $SNAP_DATA/etc/mysqlrouter
  /var/lib/mysqlrouter:
    symlink: $SNAP_DATA/var/lib/mysqlrouter
  /var/log/mysqlrouter:
    symlink: $SNAP_COMMON/var/log/mysqlrouter
  /var/log/mysqlsh:
    bind: $SNAP_COMMON/var/log/mysqlsh
  /usr/lib/mysqlsh:
    bind: $SNAP/lib/mysqlsh

hooks:
  install:
    plugs:
      - network
      - network-bind
  configure:
    plugs:
      - network

slots:
  logs:
    interface: content
    source:
      read:
        - $SNAP_COMMON/var/log/mysql
  router-logs:
    interface: content
    source:
      read:
        - $SNAP_COMMON/var/log/mysqlrouter
  mysqlrouter-sockets:
    interface: content
    content: socket-directory
    write:
      - $SNAP_COMMON/run/mysqlrouter

apps:
  mysql:
    command: usr/bin/mysql
    plugs:
      - network
  mysqld:
    command: start-mysqld.sh
    daemon: simple
    install-mode: disable
    plugs:
      - network
      - network-bind
  mysqlsh:
    command: run-mysqlsh.sh
    plugs:
      - network
  mysqlrouter:
    command: run-mysql-router.sh
    plugs:
      - network
  mysqlrouter-service:
    command: start-mysql-router.sh
    daemon: simple
    install-mode: disable
    plugs:
      - network
      - network-bind
  xtrabackup:
    command: usr/bin/xtrabackup
  xbcloud:
    command: usr/bin/xbcloud
    plugs:
      - network
  xbstream:
    command: usr/bin/xbstream
  mysqld-exporter:
    command: start-mysqld-exporter.sh
    daemon: simple
    install-mode: disable
    plugs:
      - network
      - network-bind
  mysqlrouter-exporter:
    command: start-mysqlrouter-exporter.sh
    daemon: simple
    install-mode: disable
    plugs:
      - network
      - network-bind

parts:
  packages-deb:
    plugin: nil
    stage-packages:
      - mysql-server-8.0=8.0.35-0ubuntu0.22.04.1
      - mysql-router=8.0.35-0ubuntu0.22.04.1
      - mysql-shell=8.0.34-0ubuntu0.22.04.1~ppa1
      - prometheus-mysqld-exporter=0.14.0-0ubuntu0.22.04.1~ppa1
      - prometheus-mysqlrouter-exporter=4.0.5-0ubuntu0.22.04.1~ppa1
      - xtrabackup=8.0.34-29-0ubuntu0.22.04.1~ppa1
      - util-linux
    organize:
      usr/share/doc/mysql-server-8.0/copyright: licenses/COPYRIGHT-mysql-server-8.0
      usr/share/doc/mysql-router/LICENSE.router.gz: licenses/LICENSE-mysql-router
      usr/share/doc/mysqlsh/LICENSE.gz: licenses/LICENSE-mysql-shell
      usr/share/doc/prometheus-mysqld-exporter/copyright: licenses/COPYRIGHT-prometheus-mysqld-exporter
      usr/share/doc/prometheus-mysqlrouter-exporter/copyright: licenses/COPYRIGHT-prometheus-mysqlrouter-exporter
      usr/share/doc/xtrabackup/LICENSE.gz: licenses/LICENSE-xtrabackup
      usr/share/doc/util-linux/copyright: licenses/COPYRIGHT-util-linux
  snap-license:
    plugin: dump
    source: .
    source-type: local
    stage:
      - licenses/LICENSE-snap
    organize:
      LICENSE: licenses/LICENSE-snap
  snap-scripts:
    plugin: dump
    source: snap/local
